{"ast":null,"code":"import{useState}from\"react\";import{useEntrepriseContext}from\"./useEntrepriseContext\";export const useConnexionEntreprise=()=>{const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(null);const{dispatch}=useEntrepriseContext();const connexionEnt=async(//  nom_entreprise, \n//  nom_employeur,\nemail_entreprise,// telephone,\n// adresse,\nmot_de_passeEntreprise)=>{setIsLoading(true);setError(null);const response=await fetch('/api/entreprise/loginEntreprise',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({//  nom_entreprise, \n//  nom_employeur,\nemail_entreprise,//   telephone,\n//   adresse,\nmot_de_passeEntreprise})});const json=await response.json();if(!response.ok){setIsLoading(false);setError(json.error);}if(response.ok){localStorage.setItem('entreprise',JSON.stringify(json));dispatch({type:'LOGINENTREPRISE',payload:json});setIsLoading(false);}};return{connexionEnt,isLoading,error};};","map":{"version":3,"names":["useState","useEntrepriseContext","useConnexionEntreprise","error","setError","isLoading","setIsLoading","dispatch","connexionEnt","email_entreprise","mot_de_passeEntreprise","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/rothm/source/repos/JOBBANGROTHMONYFINI/server/client/src/hooks/useConnexionEntreprise.js"],"sourcesContent":["import  { useState } from \"react\";\r\nimport { useEntrepriseContext } from \"./useEntrepriseContext\"; \r\n\r\n\r\n\r\n\r\nexport const useConnexionEntreprise = () => {\r\n\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(null)\r\n    const {dispatch} = useEntrepriseContext()\r\n\r\n\r\n    const connexionEnt = async (\r\n      //  nom_entreprise, \r\n      //  nom_employeur,\r\n        email_entreprise,\r\n       // telephone,\r\n       // adresse,\r\n        mot_de_passeEntreprise)=> {\r\n            setIsLoading(true)\r\n            setError(null)\r\n\r\n            const response  = await fetch('/api/entreprise/loginEntreprise', {\r\n                method:'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                  //  nom_entreprise, \r\n                  //  nom_employeur,\r\n                    email_entreprise,\r\n                 //   telephone,\r\n                 //   adresse,\r\n                    mot_de_passeEntreprise})\r\n            })\r\n\r\n            const json = await response.json()\r\n\r\n            if(!response.ok){\r\n                setIsLoading(false)\r\n                setError(json.error)\r\n            }\r\n            if(response.ok){\r\n    \r\n                    localStorage.setItem('entreprise', JSON.stringify(json))\r\n\r\n                    dispatch ({type:'LOGINENTREPRISE' , payload:json})\r\n\r\n                    setIsLoading(false)\r\n\r\n\r\n            }\r\n    \r\n        }\r\n\r\n        return {connexionEnt, isLoading, error}\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAUA,QAAQ,KAAQ,OAAO,CACjC,OAASC,oBAAoB,KAAQ,wBAAwB,CAK7D,MAAO,MAAM,CAAAC,sBAAsB,CAAGA,CAAA,GAAM,CAExC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACO,QAAQ,CAAC,CAAGN,oBAAoB,CAAC,CAAC,CAGzC,KAAM,CAAAO,YAAY,CAAG,KAAAA,CACnB;AACA;AACEC,gBAAgB,CACjB;AACA;AACCC,sBAAsB,GAAI,CACtBJ,YAAY,CAAC,IAAI,CAAC,CAClBF,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAO,QAAQ,CAAI,KAAM,CAAAC,KAAK,CAAC,iCAAiC,CAAE,CAC7DC,MAAM,CAAC,MAAM,CACbC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnB;AACA;AACER,gBAAgB,CACnB;AACA;AACGC,sBAAsB,CAAC,CAC/B,CAAC,CAAC,CAEF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC,GAAG,CAACP,QAAQ,CAACQ,EAAE,CAAC,CACZb,YAAY,CAAC,KAAK,CAAC,CACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC,CACxB,CACA,GAAGQ,QAAQ,CAACQ,EAAE,CAAC,CAEPC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAExDX,QAAQ,CAAE,CAACe,IAAI,CAAC,iBAAiB,CAAGC,OAAO,CAACL,IAAI,CAAC,CAAC,CAElDZ,YAAY,CAAC,KAAK,CAAC,CAG3B,CAEJ,CAAC,CAED,MAAO,CAACE,YAAY,CAAEH,SAAS,CAAEF,KAAK,CAAC,CAEvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}