{"ast":null,"code":"import React,{useEffect}from\"react\";import EmploiDetails from\"./EmploiDetails\";import\"./MesAnnonces.css\";import NouvelleOffre from\"../NouvelleOffre/NouvelleOffre\";import{useEmploiContext}from\"../../hooks/useEmploiContext\";import{useEntrepriseContext}from\"../../hooks/useEntrepriseContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MesAnnonces=_ref=>{let{connectedEmployerEmail}=_ref;const{emplois,dispatch}=useEmploiContext();const{entreprise}=useEntrepriseContext();const filteredEmploiList=emplois?emplois.filter(emploi=>emploi.email_employeur===connectedEmployerEmail):[];// Ajoute un log pour voir les emplois filtrés\nconsole.log('emplois filtrés:',filteredEmploiList);//fetch tout les emploi et supprimer et modifier potentiellement\nuseEffect(()=>{const fetchEmploi=async()=>{const response=await fetch('/api/offreEmploi',{headers:{'Authorization':`Bearer ${entreprise.token}`}});const json=await response.json();if(response.ok){// setEmplois(json)\ndispatch({type:'SET_EMPLOIS',payload:json});}};if(entreprise){fetchEmploi();}},[dispatch,entreprise]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"ul\",{className:\"lmj-emploi-list\",children:emplois&&emplois.map(emploi=>/*#__PURE__*/_jsx(EmploiDetails,{emploi:emploi},emploi._id))}),/*#__PURE__*/_jsx(NouvelleOffre,{})]});/*\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"lmj-emploi-list\">\r\n      {emplois && emplois.map((emploi) =>(\r\n      <EmploiDetails key ={emploi._id} emploi={emploi} />\r\n      ))}\r\n\r\n\r\n        {filteredEmploiList.length > 0 ? (\r\n          filteredEmploiList.map((emploi) => (\r\n            <div className=\"emploi-container\" key={emploi.nom_poste}>\r\n              <h3 className=\"jobTitle\">{emploi.nom_poste}</h3>\r\n              <span className=\"jobEntreprise\">{emploi.nom_entreprise}</span>\r\n              <span className=\"jobSector\">{emploi.categorie}</span>\r\n              <span className=\"jobSalary\">{emploi.salaire}</span>\r\n              <span className=\"jobLocation\">{emploi.emplacement}</span>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"buttonx\"\r\n                  onClick={() => handleDelete(emploi)}\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <li>Aucune offre d'emploi disponible.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n*/};export default MesAnnonces;","map":{"version":3,"names":["React","useEffect","EmploiDetails","NouvelleOffre","useEmploiContext","useEntrepriseContext","jsx","_jsx","jsxs","_jsxs","MesAnnonces","_ref","connectedEmployerEmail","emplois","dispatch","entreprise","filteredEmploiList","filter","emploi","email_employeur","console","log","fetchEmploi","response","fetch","headers","token","json","ok","type","payload","children","className","map","_id"],"sources":["C:/Users/rothm/source/repos/JOBBANGROTHMONYFINI/server/client/src/components/MesAnnonces/MesAnnonces.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport EmploiDetails from \"./EmploiDetails\"\r\nimport \"./MesAnnonces.css\";\r\nimport NouvelleOffre from \"../NouvelleOffre/NouvelleOffre\";\r\nimport { useEmploiContext } from \"../../hooks/useEmploiContext\";\r\nimport { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\r\n\r\nconst MesAnnonces = ({ connectedEmployerEmail }) => {\r\n   const {emplois, dispatch}= useEmploiContext()\r\n   const {entreprise} = useEntrepriseContext()\r\n   const filteredEmploiList = emplois ? emplois.filter(\r\n    (emploi) => emploi.email_employeur === connectedEmployerEmail\r\n  ) : [];\r\n\r\n  // Ajoute un log pour voir les emplois filtrés\r\n  console.log('emplois filtrés:', filteredEmploiList);\r\n\r\n\r\n\r\n\r\n//fetch tout les emploi et supprimer et modifier potentiellement\r\nuseEffect(()=>{\r\nconst fetchEmploi = async()=>{\r\n  const response = await fetch('/api/offreEmploi', {\r\n    headers: {\r\n      'Authorization': `Bearer ${entreprise.token}`\r\n    }\r\n  })\r\n  const json = await response.json()\r\n\r\n  if(response.ok){\r\n     // setEmplois(json)\r\n     \r\n     dispatch({type: 'SET_EMPLOIS', payload:json})\r\n  }\r\n}\r\n\r\nif(entreprise){\r\n  fetchEmploi()\r\n}\r\n\r\n\r\n\r\n},[dispatch, entreprise])\r\n\r\nreturn (\r\n\r\n  <div>\r\n    <ul className=\"lmj-emploi-list\">\r\n    {emplois && emplois.map((emploi) =>(\r\n    <EmploiDetails key ={emploi._id} emploi={emploi} />\r\n    ))}\r\n    </ul>\r\n    <NouvelleOffre />\r\n\r\n\r\n </div>\r\n)\r\n\r\n/*\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"lmj-emploi-list\">\r\n      {emplois && emplois.map((emploi) =>(\r\n      <EmploiDetails key ={emploi._id} emploi={emploi} />\r\n      ))}\r\n\r\n\r\n        {filteredEmploiList.length > 0 ? (\r\n          filteredEmploiList.map((emploi) => (\r\n            <div className=\"emploi-container\" key={emploi.nom_poste}>\r\n              <h3 className=\"jobTitle\">{emploi.nom_poste}</h3>\r\n              <span className=\"jobEntreprise\">{emploi.nom_entreprise}</span>\r\n              <span className=\"jobSector\">{emploi.categorie}</span>\r\n              <span className=\"jobSalary\">{emploi.salaire}</span>\r\n              <span className=\"jobLocation\">{emploi.emplacement}</span>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"buttonx\"\r\n                  onClick={() => handleDelete(emploi)}\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <li>Aucune offre d'emploi disponible.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n*/\r\n}\r\nexport default MesAnnonces;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,mBAAmB,CAC1B,MAAO,CAAAC,aAAa,KAAM,gCAAgC,CAC1D,OAASC,gBAAgB,KAAQ,8BAA8B,CAC/D,OAASC,oBAAoB,KAAQ,kCAAkC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExE,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,sBAAuB,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACE,OAAO,CAAEC,QAAQ,CAAC,CAAEV,gBAAgB,CAAC,CAAC,CAC7C,KAAM,CAACW,UAAU,CAAC,CAAGV,oBAAoB,CAAC,CAAC,CAC3C,KAAM,CAAAW,kBAAkB,CAAGH,OAAO,CAAGA,OAAO,CAACI,MAAM,CACjDC,MAAM,EAAKA,MAAM,CAACC,eAAe,GAAKP,sBACzC,CAAC,CAAG,EAAE,CAEN;AACAQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEL,kBAAkB,CAAC,CAKrD;AACAf,SAAS,CAAC,IAAI,CACd,KAAM,CAAAqB,WAAW,CAAG,KAAAA,CAAA,GAAS,CAC3B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kBAAkB,CAAE,CAC/CC,OAAO,CAAE,CACP,eAAe,CAAE,UAAUV,UAAU,CAACW,KAAK,EAC7C,CACF,CAAC,CAAC,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAElC,GAAGJ,QAAQ,CAACK,EAAE,CAAC,CACZ;AAEAd,QAAQ,CAAC,CAACe,IAAI,CAAE,aAAa,CAAEC,OAAO,CAACH,IAAI,CAAC,CAAC,CAChD,CACF,CAAC,CAED,GAAGZ,UAAU,CAAC,CACZO,WAAW,CAAC,CAAC,CACf,CAIA,CAAC,CAAC,CAACR,QAAQ,CAAEC,UAAU,CAAC,CAAC,CAEzB,mBAEEN,KAAA,QAAAsB,QAAA,eACExB,IAAA,OAAIyB,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAC9BlB,OAAO,EAAIA,OAAO,CAACoB,GAAG,CAAEf,MAAM,eAC/BX,IAAA,CAACL,aAAa,EAAmBgB,MAAM,CAAEA,MAAO,EAA3BA,MAAM,CAACgB,GAAsB,CACjD,CAAC,CACE,CAAC,cACL3B,IAAA,CAACJ,aAAa,GAAE,CAAC,EAGf,CAAC,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,CAAC,CACD,cAAe,CAAAO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}