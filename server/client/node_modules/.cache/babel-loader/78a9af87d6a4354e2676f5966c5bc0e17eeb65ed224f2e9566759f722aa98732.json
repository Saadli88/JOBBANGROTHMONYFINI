{"ast":null,"code":"import{useState}from\"react\";import{useCandidatContext}from\"./useCandidatContext\";export const useInscriptionCandidat=()=>{const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(null);const{dispatch}=useCandidatContext();const inscriptionCad=async(nom_candidat,email_candidat,mot_de_passeCandidat)=>{setIsLoading(true);setError(null);const response=await fetch('/api/candidat/signupCandidat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({nom_candidat,email_candidat,mot_de_passeCandidat})});const json=await response.json();if(!response.ok){setIsLoading(false);setError(json.error);}if(response.ok){localStorage.setItem('candidat',JSON.stringify(json));}};return{inscriptionCad,isLoading,error};};","map":{"version":3,"names":["useState","useCandidatContext","useInscriptionCandidat","error","setError","isLoading","setIsLoading","dispatch","inscriptionCad","nom_candidat","email_candidat","mot_de_passeCandidat","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem"],"sources":["C:/Users/rothm/source/repos/JOBBANGROTHMONYFINI/server/client/src/hooks/useInscriptionCandidat.js"],"sourcesContent":["import  { useState } from \"react\";\r\nimport { useCandidatContext } from \"./useCandidatContext\"; \r\n\r\nexport const useInscriptionCandidat = () => {\r\n\r\nconst [error, setError] = useState(null)\r\nconst [isLoading, setIsLoading] = useState(null)\r\nconst {dispatch} = useCandidatContext()\r\n\r\n\r\nconst inscriptionCad = async (\r\n    nom_candidat, \r\n    email_candidat,\r\n    mot_de_passeCandidat)=> {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response  = await fetch('/api/candidat/signupCandidat' , {\r\n            method:'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                nom_candidat, \r\n                email_candidat,\r\n                mot_de_passeCandidat})\r\n\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if(response.ok){\r\n                localStorage.setItem('candidat', JSON.stringify(json))\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return {inscriptionCad, isLoading, error}\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAUA,QAAQ,KAAQ,OAAO,CACjC,OAASC,kBAAkB,KAAQ,sBAAsB,CAEzD,MAAO,MAAM,CAAAC,sBAAsB,CAAGA,CAAA,GAAM,CAE5C,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACO,QAAQ,CAAC,CAAGN,kBAAkB,CAAC,CAAC,CAGvC,KAAM,CAAAO,cAAc,CAAG,KAAAA,CACnBC,YAAY,CACZC,cAAc,CACdC,oBAAoB,GAAI,CACpBL,YAAY,CAAC,IAAI,CAAC,CAClBF,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAQ,QAAQ,CAAI,KAAM,CAAAC,KAAK,CAAC,8BAA8B,CAAG,CAC3DC,MAAM,CAAC,MAAM,CACbC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBT,YAAY,CACZC,cAAc,CACdC,oBAAoB,CAAC,CAE7B,CAAC,CAAC,CAEF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC,GAAG,CAACP,QAAQ,CAACQ,EAAE,CAAC,CACZd,YAAY,CAAC,KAAK,CAAC,CACnBF,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC,CACxB,CACA,GAAGS,QAAQ,CAACQ,EAAE,CAAC,CACPC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAI9D,CAEJ,CAAC,CAED,MAAO,CAACX,cAAc,CAAEH,SAAS,CAAEF,KAAK,CAAC,CAE7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}