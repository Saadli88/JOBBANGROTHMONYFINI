{"ast":null,"code":"import{useState}from\"react\";import{useCandidatContext}from\"./useCandidatContext\";export const useConnexionCandidat=()=>{const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(null);const{dispatch}=useCandidatContext();const connexionCad=async(email_candidat,mot_de_passeCandidat)=>{setIsLoading(true);setError(null);const response=await fetch('/api/candidat/loginCandidat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email_candidat,mot_de_passeCandidat})});const json=await response.json();if(!response.ok){setIsLoading(false);setError(json.error);}if(response.ok){localStorage.setItem('candidat',JSON.stringify(json));dispatch({type:'LOGINCANDIDAT',payload:json});setIsLoading(false);}};return{connexionCad,isLoading,error};};","map":{"version":3,"names":["useState","useCandidatContext","useConnexionCandidat","error","setError","isLoading","setIsLoading","dispatch","connexionCad","email_candidat","mot_de_passeCandidat","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/rothm/source/repos/JOBBANGROTHMONYFINI/server/client/src/hooks/useConnexionCandidat.js"],"sourcesContent":["import  { useState } from \"react\";\r\nimport { useCandidatContext } from \"./useCandidatContext\"; \r\n\r\nexport const useConnexionCandidat = () => {\r\n\r\nconst [error, setError] = useState(null)\r\nconst [isLoading, setIsLoading] = useState(null)\r\nconst {dispatch} = useCandidatContext()\r\n\r\n\r\nconst connexionCad = async (\r\n\r\n    email_candidat,\r\n    mot_de_passeCandidat)=> {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response  = await fetch('/api/candidat/loginCandidat' , {\r\n            method:'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              \r\n                email_candidat,\r\n                mot_de_passeCandidat})\r\n\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if(response.ok){\r\n                localStorage.setItem('candidat', JSON.stringify(json))\r\n\r\n                dispatch ({type:'LOGINCANDIDAT' , payload:json})\r\n\r\n                setIsLoading(false)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return {connexionCad, isLoading, error}\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAUA,QAAQ,KAAQ,OAAO,CACjC,OAASC,kBAAkB,KAAQ,sBAAsB,CAEzD,MAAO,MAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CAE1C,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACO,QAAQ,CAAC,CAAGN,kBAAkB,CAAC,CAAC,CAGvC,KAAM,CAAAO,YAAY,CAAG,KAAAA,CAEjBC,cAAc,CACdC,oBAAoB,GAAI,CACpBJ,YAAY,CAAC,IAAI,CAAC,CAClBF,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAO,QAAQ,CAAI,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAG,CAC1DC,MAAM,CAAC,MAAM,CACbC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAEjBR,cAAc,CACdC,oBAAoB,CAAC,CAE7B,CAAC,CAAC,CAEF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC,GAAG,CAACP,QAAQ,CAACQ,EAAE,CAAC,CACZb,YAAY,CAAC,KAAK,CAAC,CACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC,CACxB,CACA,GAAGQ,QAAQ,CAACQ,EAAE,CAAC,CACPC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAEtDX,QAAQ,CAAE,CAACe,IAAI,CAAC,eAAe,CAAGC,OAAO,CAACL,IAAI,CAAC,CAAC,CAEhDZ,YAAY,CAAC,KAAK,CAAC,CAE3B,CAEJ,CAAC,CAED,MAAO,CAACE,YAAY,CAAEH,SAAS,CAAEF,KAAK,CAAC,CAE3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}